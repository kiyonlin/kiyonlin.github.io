(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{247:function(_,v,e){"use strict";e.r(v);var r=e(2),t=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("div",{staticClass:"content"},[e("p",[_._v("这篇文章是正在进行的"),e("code",[_._v("Angular")]),_._v("架构系列的一部分，我们将在视图层和服务层一级介绍常见的设计问题和解决方案。 这是完整系列：")]),_._v(" "),e("ul",[e("li",[_._v("视图层架构-智能组件与展示组件")]),_._v(" "),e("li",[_._v("视图层架构-容器与展示组件常见的设计缺陷")]),_._v(" "),e("li",[_._v("服务层架构-如何使用"),e("code",[_._v("Observable")]),_._v("数据服务构建"),e("code",[_._v("Angular")]),_._v("应用程序")]),_._v(" "),e("li",[_._v("服务层架构-"),e("code",[_._v("Redux")]),_._v("和"),e("code",[_._v("Ngrx Store")]),_._v("-何时使用"),e("code",[_._v("Store")]),_._v("？为什么？")]),_._v(" "),e("li",[_._v("服务层架构-"),e("code",[_._v("Ngrx Store")]),_._v("-架构指南")])]),_._v(" "),e("h2",{attrs:{id:"angular的store架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#angular的store架构","aria-hidden":"true"}},[_._v("#")]),_._v(" "),e("code",[_._v("Angular")]),_._v("的"),e("code",[_._v("Store")]),_._v("架构")]),_._v(" "),e("p",[_._v("你有没有想过使用集中存储解决方案构建应用程序有什么好处，无论是在"),e("code",[_._v("Angular")]),_._v("还是在任何框架中？")]),_._v(" "),e("p",[_._v("我们经常直接进入"),e("code",[_._v("action")]),_._v("，"),e("code",[_._v("reducer")]),_._v("和"),e("code",[_._v("store")]),_._v("架构的相关术语，但这些概念（虽然必不可少）只是达到目的的手段。")]),_._v(" "),e("p",[_._v("集中式存储架构实际上是一组应用程序设计模式，因此最好的起点可能是了解设计意图本身，以及架构有助于解决的问题和方式。")]),_._v(" "),e("p",[_._v("通过首先理解，我们不太可能冒着滥用架构或使用它而不充分利用它的风险。")])])}],!1,null,null,null);t.options.__file="译)Angular架构05-NgrxStore-架构指南.md";v.default=t.exports}}]);